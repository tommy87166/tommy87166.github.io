<html>
  <head>
    <title>Searchable CSV</title>

    <script src="/static/d3.min.js" charset="utf-8"></script>
    <script src="/static/jquery-2.2.0.min.js" charset="utf-8"></script>

    <link rel="stylesheet" href="/static/bootstrap.min.css">
    <script src="/static/bootstrap.min.js" ></script>

    <link rel="stylesheet" href="/static/jquery.dataTables.min.css">
    <script src="/static/jquery.dataTables.min.js" charset="utf-8"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <style>
      b {font-size: 20px;}
    </style>

  </head>
  <body>
    <div class="container-fluid" style="margin-top:15px;">
      <div class="row">

        <div id="optionPanel" style="display:none;">
          <div class="panel panel-default">
            <div class="panel-heading"><b>Filter</b></div>
            <div class="panel-body"><button class="btn btn-success btn-block" type="button" onclick="showTable(csv)">Show All</button></div>
            <!-- List group -->
            <ul class="list-group" id="options"></ul>
          </div>
        </div>

        <div class="col-md-12" id="tablePanel" style="display:none;opacity:0;">
          <div class="table-responsive" id='table'></div>
        </div>

        <div class="col-md-12" id="intro" style="display:none;">
          <h1>Searchable CSV</h1>
          <h4>Make your CSV file searchable instantly.</h4>
          <br>
          <h3>Display Data</h3>
          <p>Simply add CSV source behind URL.</p>
          <code>http://tommy87166.github.io/Searchable?source=[Your CSV Source]&</code>
          <h3>Column and Row Index</h3>
          <table class="table table-condensed table-bordered table-striped">
            <thead><tr><td>Column,Row = 0,0 </td><td>Column = 1</td><td>Column = 2</td><td>...</td></tr></thead>
            <tbody><tr><td>Row = 1 </td><td></td><td></td><td></td></tr></tbody>
            <tbody><tr><td>Row = 2 </td><td></td><td></td><td></td></tr></tbody>
            <tbody><tr><td>... </td><td></td><td></td><td></td></tr></tbody>
          </table>
          <h3>Specify columns which has categorical variable.</h3>
          <p>You can specify columns which contains categorical variable like sex, city, etc. The program will gather all possible outcomes and make data sortable.</p>
          <code>http://tommy87166.github.io/Searchable?source=[Your CSV Source]&cColumn=[Column Index eg. 0,1,2]&</code>
          <h3>CSV Data isn't start at Row 0.</h3>
          <p>Specify the first row (also the header row) of your data.</p>
          <code>http://tommy87166.github.io/Searchable?source=[Your CSV Source]&cColumn=[Column Index eg. 0,1,2]&keyrow=[Row Index eg.1]&</code>
          <br>
          <br>
          <br>
          <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Link Generator</h3>
            </div>
            <div class="panel-body">
              <form class="form-inline">
                <div class="form-group">
                  <label for="exampleInputName2">Source</label>
                  <input type="text" class="form-control" id="SOURCE" placeholder="Required">
                </div>
                <div class="form-group">
                  <label for="exampleInputEmail2">Key Row (First Row)</label>
                  <input type="text" class="form-control" id="KEYROW" value = "0">
                </div>
                <div class="form-group">
                  <label for="exampleInputEmail2">Column with Categorical Value</label>
                  <input type="text" class="form-control" id="CCOLUMN" placeholder = "Ex. 0,1,2">
                </div>
                <button type="button" onclick="generateURL()" class="btn btn-default">Go</button>
              </form>
            </div>
          </div>
          <br>
          <br>
          <br>
          <p>By Tommy Pai (tommy87166@gmail.com)</p>
        </div>


      </div>
    </div>
  </body>

  <script>
    function generateURL(){
      var url = window.location.origin + window.location.pathname +'?source='+$("#SOURCE").val()+'&keyrow='+$("#KEYROW").val()+'&cColumn='+$("#CCOLUMN").val()+'&'
      window.location.href = url
    }

    function FilteAndShow(item){
      var category = item.dataset['key']
      var value = item.text
      showTable(csv.filter(function(d){return d[category] == value}))
    }

    function generateFilter(option){
      var Keys = d3.keys(option);
      for (var x=0;x<Keys.length;x++){
        var Key = Keys[x]
        var Items = option[Key].map(function(d){return '<li><a href="#" data-key="'+Key+'" onclick="FilteAndShow(this)">'+d+'</a></li>'}).join('')
        var output = '<li class="list-group-item"><div class="btn-group btn-block"><button type="button" class="btn btn-default btn-block dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> '+Key+' <span class="caret"></span> </button> <ul class="dropdown-menu"> '+Items+' </ul> </div></li>'
        $('#options').append(output)
      }
    }

    function getParameterByName(name, url) {
      if (!url) url = window.location.href;
      name = name.replace(/[\[\]]/g, "\\$&");
      var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
        results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    function getSelectionForCategorizedItem(csv,categorizedItem){
      var key = d3.keys(csv[0]);
      var categorizedItem = categorizedItem.map(function(d){return key[d]})
      var option = {}
      for (var x=0;x < categorizedItem.length;x++){
        option[categorizedItem[x]] = d3.set(csv.map(function(item){return item[categorizedItem[x]]})).values()
      }
      return option
    }

    function showTable(data){
      $('#table').html('<table class="table table-striped table-hover"></table>')
      var columns = d3.keys(data[0]).map(function(item){return {'title':item}})
      var data = d3.csv.parseRows(d3.csv.format(data)).slice(1)
      //CSV 檔若最後一欄為空，則該列的資料個數會不等於欄數，DataTablec 會跳 Warning
      //確定每列資料個數皆為欄數，否則補齊至欄數
      var column_count = columns.length
      data = data.map(function(d){
        if (d.length < column_count) {
          var delta = column_count - d.length
          for (var x=0;x<delta;x++){d.push("")}
          return d
        }
        else {return d}
      })
      $('#table > .table').DataTable( {
        data: data,
        columns: columns
      } );
    }

    $(document).ready(function(){
      var source = getParameterByName('source');
      var keyRow = getParameterByName('keyrow');
      categorizedItem = getParameterByName('cColumn');
      //If keyrow is not specified, then equal to 0.
      if (!keyRow) {keyRow=0;}
      if (categorizedItem) {categorizedItem = categorizedItem.split(',').map(function(d){return parseInt(d)})}
      console.log('Parameter:',source,keyRow,categorizedItem)
      if (source) {
        $('#tablePanel').show();
        d3.text("https://crossorigin.me/"+source, function(text) {
          csv = d3.csv.parse(d3.csv.formatRows(d3.csv.parseRows(text).slice(keyRow)));
          if (categorizedItem){
            generateFilter(getSelectionForCategorizedItem(csv,categorizedItem))
            $("#tablePanel").removeClass("col-md-12").addClass("col-md-10")
            $("#optionPanel").addClass("col-md-2")
            $("#optionPanel").slideDown();
          }
          showTable(csv)
          $("#tablePanel").animate({opacity:1},1000)
        });
      }
      else{
        $('#intro').show();
      }
    })

  </script>
</html>
